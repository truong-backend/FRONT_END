import React, { useState } from "react";

// =================== D·ªÆ LI·ªÜU M·∫™U ===================
const sampleTKB = {
  "H·ªçc k·ª≥ 3 - NƒÉm h·ªçc 2024-2025": {
    "Tu·∫ßn 43": {
      "Th·ª© 2": [
        {
          maMH: "CS03036",
          tenMon: "To√°n cao c·∫•p",
          nmh: "3",
          stc: "3.0",
          maLop: "x",
          stchp: "x",
          kdk: "NƒÉm",
          th: "1",
          thu: "Th·ª© 2",
          tietBd: 1,
          tietKt: 3,
          st: "5",
          phong: "A101",
          cbgd: "TVH∆∞ng",
          tuan: "23/06/2025 - 29/06/2025",
          ngay: "2025-06-23"
        }
      ],
      "Th·ª© 3": [
        {
          maMH: "CS03036",
          tenMon: "L·∫≠p tr√¨nh Web",
          nmh: "3",
          stc: "3.0",
          maLop: "x",
          stchp: "x",
          kdk: "NƒÉm",
          th: "1",
          thu: "Th·ª© 3",
          tietBd: 2,
          tietKt: 5,
          st: "5",
          phong: "B202",
          cbgd: "TVH∆∞ng",
          tuan: "23/06/2025 - 29/06/2025",
          ngay: "2025-06-24"
        }
      ],
      "Th·ª© 5": [
        {
          maMH: "CS03036",
          tenMon: "CSDL",
          nmh: "3",
          stc: "3.0",
          maLop: "x",
          stchp: "x",
          kdk: "NƒÉm",
          th: "1",
          thu: "Th·ª© 5",
          tietBd: 1,
          tietKt: 3,
          st: "5",
          phong: "C606",
          cbgd: "TVH∆∞ng",
          tuan: "23/06/2025 - 29/06/2025",
          ngay: "2025-06-26"
        }
      ]
    }
  }
};

// =================== CONSTANTS ===================
const days = ["Th·ª© 2", "Th·ª© 3", "Th·ª© 4", "Th·ª© 5", "Th·ª© 6", "Th·ª© 7", "Ch·ªß nh·∫≠t"];
const tietMax = 15;

// =================== COMPONENT: TH·ªúI KH√ìA BI·ªÇU C√Å NH√ÇN ===================
const TKBCaNhan = ({ data }) => {
  // L·∫•y t·∫•t c·∫£ m√¥n h·ªçc t·ª´ t·∫•t c·∫£ c√°c ng√†y
  const allSubjects = Object.keys(data).reduce((acc, day) => {
    return [...acc, ...data[day]];
  }, []);

  return (
    <div className="space-y-4">
      {/* Ti√™u ƒë·ªÅ */}
      <h2 className="text-xl font-bold text-blue-600 mb-2 text-center">
        Th·ªùi Kh√≥a Bi·ªÉu C√° Nh√¢n
      </h2>
      
      {/* N·ªôi dung b·∫£ng */}
      {allSubjects.length > 0 ? (
        <div className="overflow-x-auto">
          <table className="table-auto border-collapse border border-gray-400 w-full text-sm">
            {/* Header b·∫£ng */}
            <thead>
              <tr className="bg-blue-100 text-center">
                <th className="border border-gray-400 px-2 py-1">M√£ MH</th>
                <th className="border border-gray-400 px-2 py-1">T√™n MH</th>
                <th className="border border-gray-400 px-2 py-1">NMH</th>
                <th className="border border-gray-400 px-2 py-1">STC</th>
                <th className="border border-gray-400 px-2 py-1">M√£ l·ªõp</th>
                <th className="border border-gray-400 px-2 py-1">STCHP</th>
                <th className="border border-gray-400 px-2 py-1">KDK</th>
                <th className="border border-gray-400 px-2 py-1">TH</th>
                <th className="border border-gray-400 px-2 py-1">Ti·∫øt BD</th>
                <th className="border border-gray-400 px-2 py-1">ST</th>
                <th className="border border-gray-400 px-2 py-1">Ph√≤ng</th>
                <th className="border border-gray-400 px-2 py-1">CBGD</th>
                <th className="border border-gray-400 px-2 py-1">Tu·∫ßn</th>
              </tr>
            </thead>
            
            {/* Body b·∫£ng */}
            <tbody>
              {allSubjects.map((mon, index) => (
                <tr key={index} className="text-center">
                  <td className="border border-gray-300 px-2 py-1">{mon.maMH}</td>
                  <td className="border border-gray-300 px-2 py-1">{mon.tenMon}</td>
                  <td className="border border-gray-300 px-2 py-1">{mon.nmh || 'N/A'}</td>
                  <td className="border border-gray-300 px-2 py-1">{mon.stc || 'N/A'}</td>
                  <td className="border border-gray-300 px-2 py-1">{mon.maLop || 'N/A'}</td>
                  <td className="border border-gray-300 px-2 py-1">{mon.stchp || 'N/A'}</td>
                  <td className="border border-gray-300 px-2 py-1">{mon.kdk || 'N/A'}</td>
                  <td className="border border-gray-300 px-2 py-1">{mon.th || 'N/A'}</td>
                  <td className="border border-gray-300 px-2 py-1">{mon.tietBd}</td>
                  <td className="border border-gray-300 px-2 py-1">{mon.st || 'N/A'}</td>
                  <td className="border border-gray-300 px-2 py-1">{mon.phong}</td>
                  <td className="border border-gray-300 px-2 py-1">{mon.cbgd || 'N/A'}</td>
                  <td className="border border-gray-300 px-2 py-1">{mon.tuan || 'N/A'}</td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      ) : (
        <p className="text-center text-red-600">Kh√¥ng c√≥ d·ªØ li·ªáu th·ªùi kh√≥a bi·ªÉu.</p>
      )}
    </div>
  );
};

// =================== COMPONENT: TH·ªúI KH√ìA BI·ªÇU THEO TU·∫¶N ===================
const TKBTheoTuan = ({ data, selectedTuan }) => {
  // States cho modal chi ti·∫øt
  const [showDetails, setShowDetails] = useState(false);
  const [selectedSubject, setSelectedSubject] = useState(null);

  // H√†m t√¨m m√¥n h·ªçc theo ng√†y v√† ti·∫øt
  const getMonHoc = (day, tiet) => {
    const list = data[day] || [];
    for (let mon of list) {
      if (tiet >= mon.tietBd && tiet <= mon.tietKt) {
        return mon;
      }
    }
    return null;
  };

  // X·ª≠ l√Ω click v√†o m√¥n h·ªçc
  const handleSubjectClick = (subject) => {
    setSelectedSubject(subject);
    setShowDetails(true);
  };

  return (
    <div className="p-4 overflow-x-auto">
      {/* Controls - Ch·ªçn h·ªçc k·ª≥ v√† tu·∫ßn */}
      <div className="mb-4 space-x-4">
        <label className="text-sm font-medium text-gray-700">H·ªçc k·ª≥ </label>
        <select className="border border-gray-300 px-3 py-1 rounded">
          <option value="HK1">H·ªçc k·ª≥ 1 nƒÉm 2022-2023</option>
          <option value="HK2">H·ªçc k·ª≥ 2 nƒÉm 2022-2023</option>
          <option value="HK3">H·ªçc k·ª≥ 3 nƒÉm 2022-2023</option>
        </select>

        <label className="text-sm font-medium text-gray-700 colors red"> Tu·∫ßn  </label>
        <select className="border border-gray-300 px-3 py-1 rounded">
          <option value="Tu·∫ßn 1">Tu·∫ßn 1 [T·ª´ 23/06/2025 -- ƒê·∫øn 29/06/2025]</option>
          <option value="Tu·∫ßn 2">Tu·∫ßn 2 [T·ª´ 23/06/2025 -- ƒê·∫øn 29/06/2025]</option>
          <option value="Tu·∫ßn 3">Tu·∫ßn 3 [T·ª´ 23/06/2025 -- ƒê·∫øn 29/06/2025]</option>
          <option value="Tu·∫ßn ...">...</option>
        </select>
      </div>

      {/* Ti√™u ƒë·ªÅ */}
      <h1 className="text-2xl font-bold text-center text-blue-600 mb-4">
        Th·ªùi Kh√≥a Bi·ªÉu Tu·∫ßn: {selectedTuan}
      </h1>

      {/* B·∫£ng th·ªùi kh√≥a bi·ªÉu ch√≠nh */}
      <div className="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden">
        <table className="table-auto border-collapse w-full text-sm">
          {/* Header b·∫£ng */}
          <thead>
            <tr className="bg-gradient-to-r from-blue-500 to-blue-600 text-white text-center">
              <th className="border border-blue-400 px-3 py-2 font-semibold">Ti·∫øt</th>
              {days.map((day) => (
                <th key={day} className="border border-blue-400 px-3 py-2 font-semibold">
                  {day}
                </th>
              ))}
            </tr>
          </thead>
          
          {/* Body b·∫£ng */}
          <tbody>
            {Array.from({ length: tietMax }, (_, i) => i + 1).map((tiet) => (
              <tr key={tiet} className="text-center hover:bg-gray-50">
                {/* C·ªôt ti·∫øt h·ªçc */}
                <td className="border border-gray-300 font-semibold px-3 py-2 bg-gray-100">
                  <div className="text-blue-700">Ti·∫øt {tiet}</div>
                  <div className="text-xs text-gray-500">
                    {tiet <= 5 ? 'S√°ng' : tiet <= 10 ? 'Chi·ªÅu' : 'T·ªëi'}
                  </div>
                </td>
                
                {/* C√°c c·ªôt ng√†y trong tu·∫ßn */}
                {days.map((day) => {
                  const mon = getMonHoc(day, tiet);
                  
                  // N·∫øu c√≥ m√¥n h·ªçc v√† l√† ti·∫øt b·∫Øt ƒë·∫ßu
                  if (mon && mon.tietBd === tiet) {
                    const rowSpan = mon.tietKt - mon.tietBd + 1;
                    return (
                      <td
                        key={day + tiet}
                        rowSpan={rowSpan}
                        className="border border-gray-300 bg-gradient-to-br from-green-50 to-green-100 text-left px-3 py-2 align-top cursor-pointer hover:from-green-100 hover:to-green-200 transition-colors"
                        onClick={() => handleSubjectClick(mon)}
                      >
                        <div className="font-bold text-blue-700 text-sm mb-1">{mon.tenMon}</div>
                        <div className="text-xs text-gray-600 space-y-1">
                          <div className="flex items-center">
                            <span className="font-medium">üìç</span>
                            <span className="ml-1">{mon.phong}</span>
                          </div>
                          <div className="flex items-center">
                            <span className="font-medium">üë®‚Äçüè´</span>
                            <span className="ml-1">{mon.cbgd}</span>
                          </div>
                          <div className="flex items-center">
                            <span className="font-medium">üéØ</span>
                            <span className="ml-1">{mon.stc} TC</span>
                          </div>
                        </div>
                      </td>
                    );
                  } 
                  // N·∫øu ƒëang trong kho·∫£ng ti·∫øt c·ªßa m√¥n h·ªçc
                  else if (mon && mon.tietBd < tiet && tiet <= mon.tietKt) {
                    return null;
                  } 
                  // √î tr·ªëng
                  else {
                    return (
                      <td key={day + tiet} className="border border-gray-300 px-3 py-2 bg-gray-50"></td>
                    );
                  }
                })}
              </tr>
            ))}
          </tbody>
        </table>
      </div>

      {/* Modal chi ti·∫øt m√¥n h·ªçc */}
      {showDetails && selectedSubject && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div className="bg-white rounded-lg p-6 max-w-md w-full mx-4">
            {/* Header modal */}
            <div className="flex justify-between items-center mb-4">
              <h3 className="text-lg font-bold text-blue-700">Chi ti·∫øt m√¥n h·ªçc</h3>
              <button
                onClick={() => setShowDetails(false)}
                className="text-gray-500 hover:text-gray-700 text-xl"
              >
                √ó
              </button>
            </div>
            
            {/* N·ªôi dung modal */}
            <div className="space-y-3">
              <div className="grid grid-cols-2 gap-4">
                <div>
                  <span className="text-sm font-medium text-gray-600">M√£ m√¥n h·ªçc:</span>
                  <div className="font-semibold text-blue-700">{selectedSubject.maMH}</div>
                </div>
                <div>
                  <span className="text-sm font-medium text-gray-600">S·ªë t√≠n ch·ªâ:</span>
                  <div className="font-semibold text-green-700">{selectedSubject.stc}</div>
                </div>
              </div>
              
              <div>
                <span className="text-sm font-medium text-gray-600">T√™n m√¥n h·ªçc:</span>
                <div className="font-semibold text-gray-800">{selectedSubject.tenMon}</div>
              </div>
              
              <div className="grid grid-cols-2 gap-4">
                <div>
                  <span className="text-sm font-medium text-gray-600">Th·ª©:</span>
                  <div className="font-semibold">{selectedSubject.thu}</div>
                </div>
                <div>
                  <span className="text-sm font-medium text-gray-600">Ti·∫øt:</span>
                  <div className="font-semibold">{selectedSubject.tietBd} - {selectedSubject.tietKt}</div>
                </div>
              </div>
              
              <div className="grid grid-cols-2 gap-4">
                <div>
                  <span className="text-sm font-medium text-gray-600">Ph√≤ng h·ªçc:</span>
                  <div className="font-semibold text-orange-700">{selectedSubject.phong}</div>
                </div>
                <div>
                  <span className="text-sm font-medium text-gray-600">Gi·∫£ng vi√™n:</span>
                  <div className="font-semibold text-purple-700">{selectedSubject.cbgd}</div>
                </div>
              </div>
              
              <div>
                <span className="text-sm font-medium text-gray-600">Tu·∫ßn h·ªçc:</span>
                <div className="font-semibold text-gray-700">{selectedSubject.tuan}</div>
              </div>
            </div>
            
            {/* Footer modal */}
            <div className="mt-6 text-center">
              <button
                onClick={() => setShowDetails(false)}
                className="bg-blue-500 hover:bg-blue-600 text-white px-6 py-2 rounded-lg transition-colors"
              >
                ƒê√≥ng
              </button>
            </div>
          </div>
        </div>
      )}

      {/* Ch√∫ th√≠ch */}
      <div className="mt-6 bg-gray-50 p-4 rounded-lg">
        <h4 className="font-semibold text-gray-700 mb-2">Ch√∫ th√≠ch:</h4>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-2 text-sm text-gray-600">
          <div>‚Ä¢ Nh·∫•p v√†o √¥ m√¥n h·ªçc ƒë·ªÉ xem chi ti·∫øt</div>
          <div>‚Ä¢ M√†u xanh: C√≥ l·ªãch h·ªçc</div>
          <div>‚Ä¢ S√°ng: Ti·∫øt 1-5, Chi·ªÅu: Ti·∫øt 6-10, T·ªëi: Ti·∫øt 11-15</div>
          <div>‚Ä¢ TC: T√≠n ch·ªâ</div>
        </div>
      </div>

      {/* N√∫t ƒëi·ªÅu h∆∞·ªõng tu·∫ßn */}
      <div className="flex space-x-4 justify-center mt-4">
        <div
          className="cursor-pointer bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded select-none"
          onClick={() => alert("ƒêi t·ªõi tu·∫ßn ƒë·∫ßu")}
        >
          Tu·∫ßn ƒë·∫ßu
        </div>
        <div
          className="cursor-pointer bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded select-none"
          onClick={() => alert("Tu·∫ßn tr∆∞·ªõc")}
        >
          Tu·∫ßn tr∆∞·ªõc
        </div>
        <div
          className="cursor-pointer bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded select-none"
          onClick={() => alert("Tu·∫ßn sau")}
        >
          Tu·∫ßn sau
        </div>
        <div
          className="cursor-pointer bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded select-none"
          onClick={() => alert("Tu·∫ßn cu·ªëi")}
        >
          Tu·∫ßn cu·ªëi
        </div>
      </div>
    </div>
  );
};

// =================== COMPONENT CH√çNH ===================
export const TKBComponents = () => {
  // States ch√≠nh
  const [selectedView, setSelectedView] = useState("theoTuan");
  const [selectedHk, setSelectedHk] = useState("H·ªçc k·ª≥ 3 - NƒÉm h·ªçc 2024-2025");
  const [selectedWeekIndex, setSelectedWeekIndex] = useState(0);

  // Logic x·ª≠ l√Ω d·ªØ li·ªáu
  const weeks = Object.keys(sampleTKB[selectedHk] || []);
  const selectedTuan = weeks[selectedWeekIndex];
  const tkbData = sampleTKB[selectedHk]?.[selectedTuan] || {};

  return (
    <div className="p-4 max-w-5xl mx-auto">
      {/* Control ch·ªçn ch·∫ø ƒë·ªô hi·ªÉn th·ªã */}
      <div className="flex items-center justify-center gap-4 mb-6">
        <label className="text-sm font-medium text-gray-700">Ch·ªçn ch·∫ø ƒë·ªô hi·ªÉn th·ªã:</label>
        <select
          value={selectedView}
          onChange={(e) => setSelectedView(e.target.value)}
          className="border border-gray-300 px-3 py-1 rounded"
        >
          <option value="theoTuan">Th·ªùi kh√≥a bi·ªÉu theo tu·∫ßn</option>
          <option value="caNhan">Th·ªùi kh√≥a bi·ªÉu c√° nh√¢n</option>
        </select>
      </div>

      {/* Render component t∆∞∆°ng ·ª©ng */}
      {selectedView === "theoTuan" ? (
        <TKBTheoTuan data={tkbData} selectedTuan={selectedTuan} />
      ) : (
        <TKBCaNhan data={tkbData} />
      )}
    </div>
  );
};